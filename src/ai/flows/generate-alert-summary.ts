'use server';

/**
 * @fileOverview This file defines a Genkit flow for generating a summarized explanation of alerts triggered by the intelligent alert system.
 *
 * - generateAlertSummary - A function that generates a summary of alerts.
 * - GenerateAlertSummaryInput - The input type for the generateAlertSummary function.
 * - GenerateAlertSummaryOutput - The return type for the generateAlertSummary function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateAlertSummaryInputSchema = z.object({
  sensorType: z.string().describe('The type of sensor that triggered the alert.'),
  sensorValue: z.number().describe('The value of the sensor reading that triggered the alert.'),
  threshold: z.number().describe('The threshold that was exceeded to trigger the alert.'),
  historicalData: z.string().describe('Historical sensor data to provide context for the alert.'),
});
export type GenerateAlertSummaryInput = z.infer<typeof GenerateAlertSummaryInputSchema>;

const GenerateAlertSummaryOutputSchema = z.object({
  summary: z.string().describe('A summarized explanation of the alert, including the root cause and how to address it.'),
});
export type GenerateAlertSummaryOutput = z.infer<typeof GenerateAlertSummaryOutputSchema>;

export async function generateAlertSummary(input: GenerateAlertSummaryInput): Promise<GenerateAlertSummaryOutput> {
  return generateAlertSummaryFlow(input);
}

const generateAlertSummaryPrompt = ai.definePrompt({
  name: 'generateAlertSummaryPrompt',
  input: {schema: GenerateAlertSummaryInputSchema},
  output: {schema: GenerateAlertSummaryOutputSchema},
  prompt: `You are an expert smart home analyst. You are responsible for summarizing alerts generated by a smart home system.

  Given the following sensor data, threshold, and historical data, provide a concise summary of the alert, explaining the root cause and how to address it. Be specific and actionable.

  Sensor Type: {{{sensorType}}}
  Sensor Value: {{{sensorValue}}}
  Threshold: {{{threshold}}}
  Historical Data: {{{historicalData}}}
  `,
});

const generateAlertSummaryFlow = ai.defineFlow(
  {
    name: 'generateAlertSummaryFlow',
    inputSchema: GenerateAlertSummaryInputSchema,
    outputSchema: GenerateAlertSummaryOutputSchema,
  },
  async input => {
    const {output} = await generateAlertSummaryPrompt(input);
    return output!;
  }
);
